/* 1 */

#include <stdio.h>

int leValidaTipo()
{
    int tipo;
    
    printf("Coloque o tipo do produto:\n1 - fruta\n2 - legume\n3 - verdura\n");
    scanf("%d", &tipo);
    
    return tipo;
}

void qprodutos(int *quantidadePtr)
{
    int tipo, codigo, a = 0, b = 0, c = 0, i, quantidade;
    
    quantidade = *quantidadePtr;
    
    for(i = 1; i <= quantidade; i++)
    {
        printf("Coloque o código do produto %d: ", i);
        scanf("%d", &codigo);
        
        tipo = leValidaTipo();
        
        if(tipo == 1)
        {
            printf("O produto %d é do tipo 1\n", codigo);
            a++;
        }
        else if(tipo == 2)
        {
            printf("O produto %d é do tipo 2\n", codigo);
            b++;
        }
        else if (tipo == 3)
        {
            printf("O produto %d é do tipo 3\n", codigo);
            c++;
        }
        else
        {
            printf("Digito errado, tente novamente\n");
            i--;
        }
    }
    
    printf("Produtos do tipo 1: %d\nProdutos do tipo 2: %d\nProduto do tipo 3: %d\n", a, b, c);
}

int main()
{
    int quantidade;
    
    printf("Coloque a quantidade de produtos: ");
    scanf("%d", &quantidade);
    
    qprodutos(&quantidade);
    
    return 0;
}

/* 2 */

#include <stdio.h>
#include <string.h>

struct _product
{
    int codigo;
    
    char tipo[2];
    
    int qte; /* Quantidade em Estoque */
    
    float preco;
};

typedef struct _product product;

char *calcula(product *a, int *nptr, int *iptr) /* a - tipo do produto */
{
    if(strcmp(a->tipo, "i") == 0 || strcmp(a->tipo, "I") == 0)
    {
        (*iptr)++;
        
        return "Produto Importado";
    }
    
    if(strcmp(a->tipo, "n") == 0 || strcmp(a->tipo, "N") == 0)
    {
        (*nptr)++;
        
        return "Produto Nacional";
    }
}

int main ()
{
    product produto[3] = {0};
    
    int nptr = 0, iptr = 0;
    
    float valort = 0;
    
    for(int i = 0; i < 3; i++)
    {
        printf("Coloque o código: ");
        scanf("%d", &produto[i].codigo);
        
        printf("Coloque o tipo: ");
        scanf(" %s", produto[i].tipo);
        
        printf("Coloque a quantidade: ");
        scanf("%d", &produto[i].qte);
        
        printf("Coloque o preço unitário: ");
        scanf("%f", &produto[i].preco);
        
        valort = (produto[i].qte * produto[i].preco);
        
        printf("\nCódigo: %d\n\nTipo: %s\n\nValor Total: %.2f\n\n", produto[i].codigo, calcula(&produto[i], &nptr, &iptr), valort);
    }
    
    printf("Número de Produtos Importados: %d\n\nNúmero de Produtos Nacionais: %d\n\n", iptr, nptr);
    
    return 0;
}

/* 3 */

#include <stdio.h>

struct _funcionario
{
    int matricula;
    
    float salario;
};

typedef struct _funcionario funcionario;

int imaior(funcionario g[], int qt) /* Para o maior array, só inverter o operador relacional do if */
{
    int m = 0;
    
    for(int i = 1; i < qt; i++)
    {
        if(g[i].salario > g[m].salario)
        {
            m = i;
        }
    }
    return m;
}

void umDepartamento(int qtf, funcionario f[], float *msalario, int *qtfs )
{
    int maior;
    
    for(int i = 0; i < qtf; i++)
    {
        printf("Coloque a matricula do funcionário %d: ", i + 1);
        scanf("%d", &f[i].matricula);
            
        printf("Coloque o salário do funcionário %d: ", i + 1);
        scanf("%f", &f[i].salario);
    }
    
    maior = imaior(f, qtf);
    
    *msalario = f[maior].salario;
    
    for(int i = 0; i < qtf; i++)
    {
        if(f[i].salario == *msalario)
        {
            (*qtfs)++;
        }
    }
}

int main()
{
    int codigo, qtf, qtfs;
    
    float msalario;
    
    funcionario a[] = {0};
    
    printf("Informe o código do departamento: ");
    scanf("%d", &codigo);
    
    while(codigo != 0)
    {
        qtfs = 0;
        
        printf("Informe a quantidade de funcionários: ");
        scanf("%d", &qtf);
        
        umDepartamento(qtf, a, &msalario, &qtfs);
        
        printf("\nPara o departamento %d\n\nO maior salário do departamento é: %.2f\nO número de funcionários com o maior salário é %d\n", codigo, msalario, qtfs);
        
        printf("Informe o código do departamento: ");
        scanf("%d", &codigo);
    }
    
    return 0;
}

/* 4 */

#include <stdio.h>

struct _peca
{
    int codigo;
    
    int classificacao;
};
 
typedef struct _peca peca;
 
int leValidaClassificacao()
{
    int classificacao;
    
    printf("Coloque a classificação da peça: ");
    scanf("%d", &classificacao);
    
    while(classificacao < 1 || classificacao > 4)
    {
        printf("\nClassificação errada! Tente novamente!\n");
        
        printf("Coloque a classificação da peça: ");
        scanf("%d", &classificacao);
    }
    
    return classificacao;
}

void classe(peca pecas[], int qtmaxima[], int qtminima[])
{
    for(int i = 0; i < 5; i++)
    {
        if(pecas[i].classificacao == 1)
        {
            qtminima[i] = 100;
        
            qtmaxima[i] = 120;
        }   
    
        else if(pecas[i].classificacao == 2)
        {
            qtminima[i] = 150;
        
            qtmaxima[i] = 180;
        }
    
        else if(pecas[i].classificacao == 3)
        {
            qtminima[i] = 200;
        
            qtmaxima[i] = 250;
        }
    
        else
        {
            qtminima[i] = 250;
        
            (qtmaxima[i]) = 300;
        }
    }
}

int main()
{
    peca pecas[100] = {0};
    
    int qtmaxima[100] = {0}, qtminima[100] = {0};
    
    for(int i = 0; i < 100; i++)
    {
        pecas[i].classificacao = leValidaClassificacao();
        
        classe(pecas, qtmaxima, qtminima);
        
        printf("\nCódigo: %d\nQuantidade Mínima: %d\nQuantidade Máxima: %d\n", i + 1, qtminima[i], qtmaxima[i]);
    }
    
    return 0;
}
